TYPEMAP

ndarray3* T_NDARRAY3


INPUT

T_NDARRAY3
	# need to wrap the PDL data field using ndarray3_wrap
	pdl* p_${argoff}_in = PDL->SvPDLV($arg);
	if( PDL_F != p_${argoff}_in->datatype )
		croak(\"Can not use typemap! PDL does not contain float data (datatype: %d)\", p_${argoff}_in->datatype);
	if( 3 != p_${argoff}_in->ndims )
		croak(\"Can not use PDL data! The input is not rank 3 (rank: %d)\", p_${argoff}_in->ndims);
	$var = ndarray3_wrap( (float*)(p_${argoff}_in->data),
		p_${argoff}_in->dims[0],
		p_${argoff}_in->dims[1],
		p_${argoff}_in->dims[2] );
	if( p_${argoff}_in->hdrsv ) {
		HV* p_${argoff}_in_hv = (HV*)SvRV( (SV*)( p_${argoff}_in->hdrsv ) );
		SV** p_${argoff}_in_spacing_sv;
		if( p_${argoff}_in_spacing_sv = hv_fetchs(p_${argoff}_in_hv, \"spacing\", 0 ) ) {
			AV* p_${argoff}_in_spacing_av = (AV*)SvRV( *p_${argoff}_in_spacing_sv );

			$var->has_spacing = true;

			for( int dim_idx = 0; dim_idx < PIXEL_NDIMS; dim_idx++ ) {
				/* NOTE: not checking the result of av_fetch because we
				 * assume spacing is an arrayref of correct length */
				$var->spacing[dim_idx] = SvNV(*av_fetch(p_${argoff}_in_spacing_av, dim_idx, 0));
			}
		}
	}

OUTPUT

T_NDARRAY3
	/* need to wrap ndarray3 data field in a PDL structure -> SV* */
	pdl* p_out = PDL->pdlnew();
	PDL->setdims(p_out, ((ndarray3*)$var)->sz, 3); /* rank 3 */
	p_out->data = ((ndarray3*)$var)->p; /* point at the ndarray3 data */
	p_out->datatype = PDL_F; /* using float (pixel_type) for storage */

	/* make sure the core doesn't meddle with your data */
	p_out->state |= PDL_DONTTOUCHDATA | PDL_ALLOCATED;

	/* if has_spacing, need to set key in PDL header */
	if( ((ndarray3*)$var)->has_spacing ) {
		HV* p_out_hv;
		if( !p_out->hdrsv ) {
			p_out->hdrsv = newRV((SV*)newHV());
		}

		p_out_hv = SvRV((SV*)(p_out->hdrsv));

		AV* spacing_av = (AV*)sv_2mortal((SV*)newAV());
		for( int dim_idx = 0; dim_idx < PIXEL_NDIMS; dim_idx++ ) {
			av_push(spacing_av, newSVnv(  ((ndarray3*)$var)->spacing[dim_idx]  ) );
		}

		hv_stores( p_out_hv, \"spacing\", newRV((SV*) spacing_av ));
	}

	PDL->SetSV_PDL($arg,p_out);
